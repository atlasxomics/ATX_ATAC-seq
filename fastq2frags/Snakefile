"""Snakemake pipeline for converting raw fastq data to ATAC-seq fragments
"""

import glob
import os

REF_DIR = 'Refdata_scATAC_MAESTRO_GRCh38_1.1.0'
FASTQ_DIR = 'fastqs'
BARCODE_FILE = 'bc50.txt.gz'
CORES = 32

rule all:
  input:
    expand('{sample}_fragments.tsv.gz', sample=os.listdir(FASTQ_DIR))

rule filter_L1:
  input:
    in1 = lambda wildcards: glob.glob(f'{FASTQ_DIR}/{wildcards.sample}/*R1*fastq.gz')[0],
    in2 = lambda wildcards: glob.glob(f'{FASTQ_DIR}/{wildcards.sample}/*R2*fastq.gz')[0]
  output:
    out1 = '{sample}_linker1_R1.fastq.gz',
    out2 = '{sample}_linker1_R2.fastq.gz'
  shell:
    '''
    bbmap/bbduk.sh \
    in1={input.in1} \
    in2={input.in2} \
    outm1={output.out1} \
    outm2={output.out2} \
    k=30 \
    mm=f \
    rcomp=f \
    restrictleft=103 \
    skipr1=t \
    hdist=3 \
    stats={wildcards.sample}_stats.linker1.txt \
    threads={CORES} \
    literal=GTGGCCGATGTTTCGCATCGGCGTACGACT
    '''

rule filter_L2:
  input:
    in1 = '{sample}_linker1_R1.fastq.gz',
    in2 = '{sample}_linker1_R2.fastq.gz'
  output:
    out1 = '{sample}_linker2_R1.fastq.gz',
    out2 = '{sample}_linker2_R2.fastq.gz'
  shell:
    '''
    bbmap/bbduk.sh \
    in1={input.in1} \
    in2={input.in2} \
    outm1={output.out1} \
    outm2={output.out2} \
    k=30 \
    mm=f \
    rcomp=f \
    restrictleft=65 \
    skipr1=t \
    hdist=3 \
    stats={wildcards.sample}_stats.linker2.txt \
    threads={CORES} \
    literal=ATCCACGTGCTTGAGAGGCCAGAGCATTCG
    '''

rule chromap:
  input:
    in1 = '{sample}_linker2_R1.fastq.gz',
    in2 = '{sample}_linker2_R2.fastq.gz'
  output:
    '{sample}_aln.bed'
  params:
    ref_dir = REF_DIR,
    barcodes = BARCODE_FILE
  shell:
    '''
    chromap/chromap \
      -t {CORES} \
      --preset atac \
      -x {params.ref_dir}/GRCh38_genome.index \
      -r {params.ref_dir}/GRCh38_genome.fa \
      -1 {input.in1} \
      -2 {input.in2} \
      -o {wildcards.sample}_aln.bed \
      -b {input.in2} \
      --barcode-whitelist {params.barcodes} \
      --read-format bc:22:29,bc:60:67,r1:0:-1,r2:117:-1
    '''

rule bed2fragment:
  input:
    '{sample}_aln.bed'
  output:
    '{sample}_fragments.tsv.gz'
  shell:
    '''	
    awk 'BEGIN{{FS=OFS=" "}}{{$4=$4"-1"}}4' {input} > {wildcards.sample}_temp.bed
    sed 's/ /\t/g' {wildcards.sample}_temp.bed > {wildcards.sample}_fragments.tsv
    bgzip -c {wildcards.sample}_fragments.tsv > {output}
    '''